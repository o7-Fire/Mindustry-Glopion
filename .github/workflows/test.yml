name: Sonar Gradle Test

on:
  workflow_run:
    workflows: [ "Java CI" ]
    branches: [ main ]
    types:
      - completed
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:



jobs:
 Gradle-Test-Sonar:
    runs-on: ubuntu-latest
    steps:
     # Check out current repository
    - name: Fetch Sources
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Gradle Validation
      uses: gradle/wrapper-validation-action@v1
    - name: Set up JDK 16
      uses: actions/setup-java@v1
      with:
        java-version: 16
    #when you don't
    - name: Change wrapper permissions
      run: chmod +x ./gradlew     

        
    # Cache Gradle dependencies
    - name: Setup Gradle Dependencies Cache
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}

    # Cache Gradle Wrapper
    - name: Setup Gradle Wrapper Cache
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

    - name: Gradle Test Coverage
      uses: GabrielBB/xvfb-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        run: ./gradlew clean download copyMods test -PgithubRepo="$GITHUB_REPOSITORY" --info --scan --continue
       
    - name: Download mindustry
      run: |
        chmod +x ./downloadMindustryForTest.sh
        ./downloadMindustryForTest.sh

    - name: Run headless test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: chmod +x ./runTest.sh && ./runTest.sh
        working-directory: ./ #optional
        options: #optional
        
